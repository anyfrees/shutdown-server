name: Build & Release Electron App

on:
  release:
    types: [created]

jobs:
  # 第一步：在各个平台上构建应用
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev
          npm ci

      - name: Install dependencies on macOS and Windows
        if: runner.os != 'Linux'
        run: npm ci

      - name: Build distributable
        run: npm run make

      - name: List build artifacts for debugging
        run: ls -R ./out/make
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: ./out/make/**/*

  # 第二步：等待所有构建成功后，统一发布
  release:
    # 依赖于 build 任务成功完成
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # 必须有写入权限来创建Release和上传附件

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts # 将所有平台的产物下载到 artifacts 文件夹

      - name: List downloaded artifacts for debugging
        run: ls -R ./artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          # 从下载的附件中查找所有平台的文件并上传
          # 这会自动处理 .exe, .zip, .deb, .dmg 等所有文件
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}